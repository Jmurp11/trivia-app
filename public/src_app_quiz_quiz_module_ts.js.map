{"version":3,"file":"src_app_quiz_quiz_module_ts.js","mappings":"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","sources":["./src/app/quiz/question/question.component.html","./src/app/quiz/quiz.page.html","./src/app/quiz/quiz/quiz.component.html","./src/app/quiz/question/question.component.ts","./src/app/quiz/quiz-routing.module.ts","./src/app/quiz/quiz.module.ts","./src/app/quiz/quiz.page.ts","./src/app/quiz/quiz/quiz.component.ts"],"sourcesContent":["export default \"<div>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-subtitle>Question #{{ questionNum }}</ion-card-subtitle>\\n      <ion-card-title>{{ question.question }}</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <div *ngFor=\\\"let a of answerList\\\">\\n        <ion-button class=\\\"text-wrap\\\" expand=\\\"block\\\" (click)=\\\"answerSelected(a)\\\">{{ utilities.cleanText(a) }}</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</div>\";","export default \"<ion-router-outlet></ion-router-outlet>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ triviaType }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div class=\\\"center\\\" [hidden]=\\\"currentQuestion\\\">\\n    <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n  <app-question [hidden]=\\\"!currentQuestion\\\" [question]=\\\"currentQuestion\\\" [questionNum]=\\\"counter\\\" (newAnswerEvent)=\\\"questionAnswered($event)\\\"></app-question>\\n</ion-content>\";","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Question } from '../Question';\nimport { UtilitiesService } from '../../utilities.service';\n\ninterface OutputVal {\n  question: string;\n  selected: string;\n  correct: string;\n}\n\n@Component({\n  selector: 'app-question',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n})\nexport class QuestionComponent implements OnInit, OnChanges {\n  @Input()\n  question: Question;\n\n  @Input()\n  questionNum: number;\n\n  @Output()\n  newAnswerEvent = new EventEmitter<OutputVal>();\n\n  answerList: string[];\n\n  constructor(public utilities: UtilitiesService) {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.question) {\n      this.question.question = this.utilities.cleanText(this.question.question);\n      this.answerList = this.shuffleArray([\n        ...this.question.incorrect_answers,\n        this.question.correct_answer\n      ]);\n    }\n  }\n\n  answerSelected(answer: string) {\n    this.newAnswerEvent.emit({\n      question: this.question.question,\n      selected: this.utilities.cleanText(answer),\n      correct: this.utilities.cleanText(this.question.correct_answer)\n    });\n  }\n\n  shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuizPage } from './quiz.page';\nimport { QuizComponent } from './quiz/quiz.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuizPage,\n    children: [\n      {\n        path: '',\n        component: QuizComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuizPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuizPageRoutingModule } from './quiz-routing.module';\n\nimport { QuizPage } from './quiz.page';\nimport { QuestionComponent } from './question/question.component';\nimport { QuizComponent } from './quiz/quiz.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuizPageRoutingModule,\n  ],\n  declarations: [QuizPage, QuizComponent, QuestionComponent]\n})\nexport class QuizPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.page.html',\n  styleUrls: ['./quiz.page.scss'],\n})\nexport class QuizPage implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UtilitiesService } from 'src/app/utilities.service';\nimport { Question } from '../Question';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss'],\n})\nexport class QuizComponent implements OnInit {\n  questions: Question[];\n  currentQuestion: Question;\n  currentQIndex: number;\n  score: number;\n  quizLength: number;\n  counter: number;\n  results: {\n    question: string;\n    selected: string;\n    correct: string;\n  }[] = [];\n  triviaType: string;\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.score = 0;\n    this.counter = 0;\n    this.questions = this.router.getCurrentNavigation().extras.state.quiz;\n    this.triviaType =\n      this.router.getCurrentNavigation().extras.state.triviaType;\n    this.quizLength = this.questions.length;\n    this.setCurrentQuestion();\n  }\n\n  questionAnswered(event: any): void {\n    this.results.push({\n      question: this.currentQuestion.question,\n      selected: event.selected,\n      correct: event.correct,\n    });\n    this.questions = this.removeQuestion(\n      this.questions,\n      this.questions[this.currentQIndex].question\n    );\n\n    this.incrementScore(event.correct === event.selected);\n    this.setCurrentQuestion();\n  }\n\n  indexOfNextQuestion(q: Question[]): number {\n    return Math.floor(Math.random() * q.length);\n  }\n\n  setCurrentQuestion() {\n    if (this.questions.length <= 0) {\n      const result = {\n        results: this.results,\n        score: this.score,\n        length: this.quizLength,\n      };\n      this.router.navigate(['result'], {\n        state: { result, details: this.results },\n      });\n      return;\n    }\n    this.counter = this.counter + 1;\n    this.currentQIndex = this.indexOfNextQuestion(this.questions);\n    this.currentQuestion = this.questions[this.currentQIndex];\n  }\n\n  incrementScore(isTrue: boolean) {\n    if (isTrue) {\n      this.score = this.score + 1;\n    }\n  }\n\n  removeQuestion(q: Question[], question: string): Question[] {\n    return q.filter((el) => el.question !== question);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}